# Generated by cookiecutter terraform to provide a working example environment:

# Define Slurm partition properties:
openhpc_slurm_partitions:
%{for type_name, type_descr in compute_types ~}
    - name: ${type_name}
%{ endfor ~}

# Configure a demo user "testuser" - password taken from an environment variable if set else a vaulted value:
test_user_password: "{{ lookup('env', 'TEST_USER_PASSWORD') | default(vault_testuser_password, true) }}"
basic_users_users:
  - name: testuser # can't use rocky as $HOME isn't shared!
    password: "{{ test_user_password | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}" # idempotent
    uid: 1005

# Open Ondemand configuration:
openondemand_servername: "{{ hostvars[ groups['openondemand'].0 ].ansible_host }}" # Use a SOCKS proxy to acccess this
openondemand_auth: basic_pam # no other authentication method available in this example environment
openondemand_host_regex:  '({{ openhpc_cluster_name }}-compute-\d+)|({{ groups["grafana"] | first }})' # allows proxying to compute nodes for apps and control for monitoring
openondemand_jupyter_partition: "{{ openhpc_slurm_partitions.keys() | first }}" # default to first partition to run jupyter notebook servers
openondemand_desktop_partition: "{{ openhpc_slurm_partitions.keys() | first }}" # default to first partition to run remote desktops
