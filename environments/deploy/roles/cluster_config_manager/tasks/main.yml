---
- name: Install requirements for building python-ldap
  yum: name={{item}} state=latest
  when: is_compute_node == False
  loop:
    - "openldap-devel"
    - gcc
    - "python3-devel"

- name: Setup vault file
  copy: src=vault dest={{cluster_config_manager_install_dir}}/ owner=root group=root mode=400

- name: Setup vault vars
  copy: src=allocation_vars_crypted.yml dest={{cluster_config_manager_install_dir}}/ owner=root group=root mode=400 decrypt=no

- name: Install pip dependencies
  pip: name={{item}}
  when: is_compute_node == False
  loop:
    - "python-ldap"

- name: Install cluster_config_manager
  copy: src=cluster_config_manager dest="{{cluster_config_manager_install_dir}}/" owner=root group=root mode=700
  when: is_compute_node == False

- name: Copy over group filters
  copy: src=group_filters/ dest="{{cluster_config_manager_install_dir}}/group_filters/" owner=root group=root mode=700
  when: is_compute_node == False

- name: Setup directory structure
  file: path={{cluster_config_manager_install_dir}}/{{item}} state=directory owner=root group=root mode=700
  when: is_compute_node == False
  loop:
    - commit_etc/
    - output/
    - templates/
    - commit_etc/compute/
    - output/compute/
    - templates/compute/

- name: "Setup cluster_config_manager cron"
  cron: name="cluster_config_manager cron" minute="*/15" job="(/sbin/sss_cache -E && {{cluster_config_manager_install_dir}}/cluster_config_manager --ldap_username='{{cluster_config_manager_ldap_username}}' --ldap_password='{{cluster_config_manager_ldap_password}}' --ldap_server='{{cluster_config_manager_ldap_server}}' --groupfilterfile={{cluster_config_manager_install_dir}}/{{cluster_config_manager_group_filter_file}} -g {{cluster_config_manager_groupname}} >/dev/null 2>&1)"
  when: is_compute_node == False

- name: Install pull.sh script
  copy: src=pull.sh dest="{{cluster_config_manager_install_dir}}/" owner=root group=root mode=700
  when: is_compute_node

- name: "Setup compute node pull script"
  cron: name="cluster_config_manager pull" minute="0,15,30,45" job="({{cluster_config_manager_install_dir}}/pull.sh {{cluster_config_manager_install_dir}}/commit_etc/compute/ > /dev/null 2>&1)"
  when: is_compute_node
