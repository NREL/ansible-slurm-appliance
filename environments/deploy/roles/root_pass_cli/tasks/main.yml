---
# tasks file for root_pass_cli
# Ansible's 'user' module can only change a password if it is run as a root user or 'become' is used.
# For a non-root user, when you run 'passwd', it asks for current password before you can enter a new one.
# Workaround: Create a a temporary script that updates the password and run that script remoteley
#             and use 'no_log' directive to prevent passwords being visible in any log.
#             Tested that passwords not visible in verbose output '-vvvvv' and not in 'history' of remote computers.
#             The temporary script is deleted remotley automatically by 'script' module.
# Note:
# New password must comply with your passwd security policy.

## If you need to *temporarily* hard-code credentials, use below.
## Delete after use or use vault if you want long-term storage.
# vars:
# - PW_SALT: lookup('community.general.random_string', length=21)
#- curr_pass: MyOldPass
#- new_pass: MyNewPass123!!
- name: "Fail if hosts are not defined in `targets`"
  fail:
    msg: >
      You must define hosts in the `ROOT_TARGETS` variable,
      e.g. `-e ROOT_TARGETS=foo.hpc.nrel.gov` on the command line
  when: ROOT_TARGETS is undefined
  tags:
    - always

#- name: Helpful message
#  run_once: true
#  debug:
#    msg: >
#      This playbook does nothing unless the environment is specified with
#      the `--tags` option on the command line (dev, test, or prod).
#  tags:
#    - always
# {{ new_root_pass | password_hash('sha256', 'NREL') }}

- name: "change root password"
  user:
    name: root
    update_password: always
    password: "{{ new_root_pass|password_hash('sha256') }}"
