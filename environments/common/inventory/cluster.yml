# Yaml-format ansible inventory with default hostvars. It should be overriden/extended by an environment's own cluster.yml file.
# NB: This is the lowest-possible priority - it will be overridden by inventory files in other inventories, 'all' group_vars, etc.
# Host and group vars defined here are available even when no hosts have been provisioned (e.g. during provisioning or image build).

all:
  vars:
    # Must be provided in an environment:
    cluster_name: "{{ undef(hint='cluster_name must be defined') }}"
    image_name: "{{ undef(hint='image_name must be defined') }}"
    flavor: "{{ undef(hint='flavor must be defined') }}"
    key_pair: "{{ undef(hint='key_pair must be defined') }}"
    network_name: "{{ undef(hint='network_name must be defined') }}"
    subnet_name: "{{ undef(hint='subnet_name must be defined') }}"

    # top-level domain for cluster (FQDN is nodename.clustername.tld):
    tld: invalid

    # terraform lifecycle:
    tf_ignore_changes:
      - image_name
      - user_data
    
    # openstack volume options - note hostvars too:
    state_volume_size: 150 # GB
    home_volume_size: 100 # GB
    state_volume_device_path: /dev/vdb
    home_volume_device_path: /dev/vdc
    volumes: []
    
    # terrraform openstack_networking_port_v2:binding
    vnic_profile: {}
    vnic_type: normal
    
    security_groups: ["default"]

    # this default works when there are no child groups in the 'compute' group
    # and no partition customisation is required
    openhpc_slurm_partitions:
      - name: "compute"

control:
  hosts:
    control:
  vars:
    appliances_state_dir: /var/lib/state
    volumes: # could move to defaults
      - label: state
        description: State for control node
        size: "{{ state_volume_size }}"
        mount_point: "{{ appliances_state_dir }}"
      - label: home
        description: Home for cluster
        size: "{{ home_volume_size }}"
        mount_point: /exports/home
        mount_options: 'x-systemd.required-by=nfs-server.service,x-systemd.before=nfs-server.service'
    user_data: |
      #cloud-config
      fs_setup:
        - label: state
          filesystem: ext4
          device: {{ state_volume_device_path }}
          partition: auto
        - label: home
          filesystem: ext4
          device: {{ home_volume_device_path }}
          partition: auto
      mounts:
        - [LABEL=state, {{ appliances_state_dir }}]
        - [LABEL=home, /exports/home, auto, "x-systemd.required-by=nfs-server.service,x-systemd.before=nfs-server.service"]

login:
  hosts:
    login:
  vars:
    security_groups: # again could move to defaults
      - default
      - SSH
      - HTTPS
