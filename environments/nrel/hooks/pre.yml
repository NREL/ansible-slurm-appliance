
# - name: " "
#   hosts: control,login,compute
#   tags: nrel_
#   become: true
#   tasks:
#     - include_role:
#         name:

- name: "Set releasever and local repos"
  hosts: control,login,compute
  tags: nrel_releasever
  become: true
  tasks:
    - include_role:
        name: releasever-config

- name: "NREL pre - Mount cephfs volumes"
  hosts: control,login,compute
  tags: cephfs_mounts
  become: true
  tasks:
    - include_role:
        name: vs_hpc_mounts

- name: "NREL pre - set cluster root password"
  hosts: all
  tags: root_pass_cli
  become: true
  tasks:
    - name: include root if called
      include_role:
        name: root_pass_cli
      when: new_root_pass is defined

- name: "NREL pre - set admin hostnames to hpc.nrel.gov domain"
  hosts: control,login
  tags: set_hpc_hostname
  become: true
  tasks:
    - shell: "hostnamectl set-hostname {{ ansible_hostname }}.hpc.nrel.gov"

- name: "NREL pre - install ldap requirements to nodes"
  hosts: compute
  tags: vermilion_ldap_client
  become: true
  tasks:
    - include_role:
        name: vermilion_ldap_client

- name: NREL pre - rel-proto fixes - compute nodes
  hosts: compute
  become: true
  tasks:
    - name: Create scratch directory - should be on local SSD on real cluster
      file:
        src: /mnt/
        dest: "{{ item }}"
        state: directory
      loop:
        - /tmp/scratch
        - /var/scratch

- name: NREL pre - Ensure times are correct
  hosts: all
  tags: set_time_on_servers
  become: true
  tasks:
    - include_role:
        name: ansible-role-ntp


- name: vstack_common_config
  hosts: control,login,compute
  become: true
  tags:
    - vstack_common_config
  tasks:
    - include_role:
        name: vstack_common_config

- name: "login node only configs"
  hosts: login
  tags: set_login_configs
  become: true
  tasks:
    - include_role:
        name: vermilion_login_nodes

- name: "admin util configs"
  hosts: login,control
  tags: set_admin_configs
  become: true
  tasks:
    - include_role:
        name: vstack_admin_config

- name: "Apply configs to control nodes"
  hosts: control
  tags: set_vermilion_control_setup
  become: true
  tasks:
    - include_role:
        name: vermilion_control_setup

# Builds the /etc/hosts inventory files.
- name: nrel-proto fixes - workaround no internal DNS
  hosts:
    - cluster
  become: true
  tags: etc_hosts
  tasks:
    - name: Internal DNS workaround - generate /etc/hosts file content
      # which interface is used as ansible_host is defined by terraform (see `access_network`) so this is deterministic for multi-rail hosts
      set_fact:
        etc_hosts_content: |
          {% for host in groups['cluster'] %}{{ hostvars[host]['ansible_host'] }} {{ host }}.novalocal {{ host }}
          {% endfor %}
      run_once: true

    - name: Internal DNS workaround  - create entries in /etc/hosts for all nodes
      blockinfile:
        path: /etc/hosts
        create: yes
        state: present
        block: "{{ hostvars[ansible_play_hosts[0]].etc_hosts_content }}"

# ref: Error: cannot setup namespace using "/usr/bin/newuidmap": should have setuid or have filecaps setuid:
- name: "podman uid-gid workaround"
  hosts:
    - cluster
  become: true
  tags: etc_hosts
  tasks:
    - name: "set newuidmap/newgidmap perms so containers will start"
      file:
        path: "{{ item }}"
        mode: '4755'
      loop:
        - /usr/bin/newgidmap
        - /usr/bin/newuidmap

- name: install ldap requirements to nodes
  hosts: compute
  tags: vermilion_ldap_client
  become: true
  tasks:
    - include_role:
        name: vermilion_ldap_client

# - name: ensure desired packages are installed
#   hosts: all
#   become: true
#   vars:
#     packages:
#       - rsyslog
#   tags:
#     - nrel_base_packages
#   tasks:
#     - yum:
#         state: present
#         name: "{{ packages }}"


# #### This is a TOTAL hack or elase podman container will not load
# - name: fix perms on etc/subuid subgid files
#   hosts: control
#   become: true
#   tags:
#     - nrel_base_packages
#     - nrel_base_packagessubid
#   vars:
#     etcsubvars: |
#       stack:100000:65536
#       podman:100000:65536
#       rocky:165536:65536
#   tasks:
#     - copy:
#         content: "{{ etcsubvars }}"
#         mode: '4755'
#         dest: "{{ item }}"
#         owner: root
#         group: root
#       loop:
#         - /etc/subuid
#         - /etc/subgid
    # - file:
    #     state: touch
    #     mode: '4755'
    #     name: "{{ item }}"
    #     owner: podman
    #     group: podman
    #   loop:
    #     - /etc/subuid
    #     - /etc/subgid


# - name: "NREL pre - add ceph repos"
#   hosts: all
#   tags: do_nrel_ceph_repo
#   become: true
#   tasks:
#     - name: "NREL pre - Add Ceph repo"
#       yum_repository:
#         name: ceph
#         description: repo for ceph
#         baseurl: "{{ os_manila_mount_ceph_repo_base }}"
#         gpgcheck: 0
#         gpgkey: "{{ os_manila_mount_ceph_repo_key | default(omit) }}"
#       when:
#         - (ansible_os_family == 'RedHat') or (ansible_os_family == 'Rocky')
#         - os_manila_mount_pkgs_install | default(true) | bool


#################################################################
# vtest
# pre.yml

# - name: nrel-proto fixes - workaround no internal DNS
#   hosts:
#     - cluster
#   become: true
#   tags: etc_hosts
#   tasks:
#     - name: Internal DNS workaround - generate /etc/hosts file content
#       # which interface is used as ansible_host is defined by terraform (see `access_network`) so this is deterministic for multi-rail hosts
#       set_fact:
#         etc_hosts_content: |
#           {% for host in groups['cluster'] %}{{ hostvars[host]['ansible_host'] }} {{ host }}.novalocal {{ host }}
#           {% endfor %}
#       run_once: true

#     - name: Internal DNS workaround  - create entries in /etc/hosts for all nodes
#       blockinfile:
#         path: /etc/hosts
#         create: yes
#         state: present
#         block: "{{ hostvars[ansible_play_hosts[0]].etc_hosts_content }}"

# - name: Ensure yum repos are local
#   hosts: all
#   tags: ansible_yum_config
#   become: true
#   tasks:
#     - include_role:
#         name: ansible_yum_config
# - name: Modify slurm.conf
#   hosts: openhpc
#   tags: openhpc
#   gather_facts: false
#   tasks:
#     - community.general.ini_file:
#         path: ../../../ansible/roles/stackhpc.openhpc/templates/slurm.conf.j2
#         option: "{{ item[0] }}"
#         section: null
#         value: "{{ item[1] }}"
#         no_extra_spaces: true
#         create: no
#       loop: "{{ slurm_conf_extraparams }}"
#       delegate_to: localhost
#       run_once: true
