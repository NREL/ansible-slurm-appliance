- name: Configure bashrc HTTP proxy env variables
  hosts: cluster
  tags:
    - proxy
  vars:
    #http_proxy: "http://130.216.23.17:3128" # uni squid
    http_proxy: "http://10.10.224.2:3128"    # seed node squid
    no_proxy: "127.0.0.1,localhost,seed,wazuh,10.10.224.5,.flexihpc.nesi.org.nz"
  tasks:
    - name: Write http_proxy parameters to bashrc file
      lineinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        create: yes
        mode: 0755
        state: present
        regexp: "^export {{ item }}=.*"
        line: "export {{ item }}={{ http_proxy }}"
      with_items:
        - http_proxy
        - https_proxy

    - name: Write http_proxy parameters to bashrc file for root user
      lineinfile:
        path: "/root/.bashrc"
        create: yes
        mode: 0755
        state: present
        regexp: "^export {{ item }}=.*"
        line: "export {{ item }}={{ http_proxy }}"
      with_items:
        - http_proxy
        - https_proxy
      become: true

    - name: Write http/s_proxy parameters to /etc/environment
      lineinfile:
        path: "/etc/environment"
        create: yes
        mode: 0755
        state: present
        regexp: "{{ item }}=.*"
        line: "{{ item }}={{ http_proxy }}"
      with_items:
        - http_proxy
        - https_proxy
        - HTTP_PROXY
        - HTTPS_PROXY
      become: true

    - name: Write no_proxy parameters to /etc/environment
      lineinfile:
        path: "/etc/environment"
        create: yes
        mode: 0755
        state: present
        regexp: "no_proxy=.*"
        line: "no_proxy={{ no_proxy }}"
      become: true
      
- name: Workaround no internal DNS
  hosts:
    - cluster
  become: true
  tags: etc_hosts
  tasks:
    - name: Generate /etc/hosts file content
      # which interface is used as ansible_host is defined by terraform (see `access_network`) so this is deterministic for multi-rail hosts
      set_fact:
        etc_hosts_content: |
          {% for host in groups['cluster'] %}{{ hostvars[host].ansible_default_ipv4.address }} {{ host }}
          {% endfor %}
      run_once: true
    - name: Create entries in /etc/hosts for all nodes
      blockinfile:
        path: /etc/hosts
        create: yes
        state: present
        block: "{{ hostvars[ansible_play_hosts[0]].etc_hosts_content }}"

- name: Set date/time
  hosts: openhpc
  become: true
  tasks:
    - name: Set date/time from google
      shell:
        cmd: |
          date -u --set="$(curl -H 'Cache-Control: no-cache' -sD - http://google.com |grep '^Date:' |cut -d' ' -f3-6)"
