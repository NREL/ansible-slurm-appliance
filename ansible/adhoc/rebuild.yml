# Rebuild hosts with a specified image from OpenStack.
# 
# Use ansible's -v output to see output.
# Use --limit to control which hosts to rebuild (either specific hosts or the <cluster_name>_<partition_name> groups defining partitions).
# Optionally, supply `-e rebuild_image=<image_name_or_id>` to define a specific image, otherwise the current image is reused.
#
# NOTE: If a hostvar `instance_id` is defined this is used to select hosts. Otherwise the hostname is used and this must be unique, which may not be the case e.g. if using identically-named staging and production hosts.
#
# Example:
#   ansible-playbook -v --limit ohpc_compute ansible/adhoc/rebuild.yml -e rebuild_image=openhpc_v2.3

#TODO: should run the configuration.yml playbook to update the compute node cloud-init userdata?
#TODO: probably need to control whether we use userdata?
#TODO: if this isn't multipart mime is it going to break openstack userdata?

- hosts: cluster
  become: no
  gather_facts: no
  tasks:
    - command:
      # TODO: This isn't right, appliances_manage_userdata is host/groupvar, but then /userdata/compute is group-based.
        cmd: >
          openstack server rebuild
            {% if appliances_manage_userdata | bool %}
            --os-compute-api-version {{ os_compute_api_version }}
            --user-data {{ lookup('env', 'APPLIANCES_ENVIRONMENT_ROOT') }}/userdata/compute.txt
            {% endif %}
            {% if rebuild_image is defined %}--image {{ rebuild_image }}{% endif %}
            {{ instance_id | default(inventory_hostname) }}
      delegate_to: localhost
    - wait_for_connection:
