# Rebuild hosts with a specified image from OpenStack.
# 
# Use ansible's -v output to see output.
# Use --limit to control which hosts to rebuild (either specific hosts or the <cluster_name>_<partition_name> groups defining partitions).
# Optionally, supply `-e rebuild_image=<image_name_or_id>` to define a specific image, otherwise the current image is reused.
#
# NOTE: If a hostvar `instance_id` is defined this is used to select hosts. Otherwise the hostname is used and this must be unique, which may not be the case e.g. if using identically-named staging and production hosts.
#
# Example:
#   ansible-playbook -v --limit ohpc_compute ansible/adhoc/rebuild.yml -e rebuild_image=openhpc_v2.3

- hosts: cloud_init
  become: no
  gather_facts: no
  tasks:
    - name: Template out cloud-init userdata
      import_role:
        name: cloud_init
        tasks_from: template.yml
      delegate_to: localhost

- hosts: "{{ rebuild_hosts | default('cluster') }}" # allows equivalent of `--limit` when run using import_playbook
  become: no
  gather_facts: no
  vars:
    os_compute_api_version: 2.57 #  need at least this to support userdata in `openstack server rebuild`
  tasks:
    - command:
        cmd: >-
          openstack server rebuild {{ instance_id | default(inventory_hostname) }}
          {% if rebuild_image is defined %} --image {{ rebuild_image }}{% endif %}
          {% if 'cloud_init' in group_names %}
          --os-compute-api-version {{ os_compute_api_version }}
          --user-data "{{ cloud_init_output_path }}/{{ inventory_hostname }}.userdata.yml"
          {% endif %}
      delegate_to: localhost
    - wait_for_connection:
        delay: 15
