apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: slurm
    app.kubernetes.io/component: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: slurm
      app.kubernetes.io/component: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: slurm
        app.kubernetes.io/component: mysql
    spec:
      containers:
        - name: mysql
          image: docker.io/library/mysql:{{ mysql_tag }}
          env:
            - name: MYSQL_DATABASE
              value: slurm_acct_db # TODO: be nice to link this to environments/common/inventory/group_vars/all/mysql.yml:mysql_databases
            - name: MYSQL_ROOT_PASSWORD
              value: "{{ mysql_root_password }}" # ignored once mysql is initialised
            - name: MYSQL_USER
              value: slurm
            - name: MYSQL_PASSWORD
              value: "{{ vault_mysql_slurm_password }}" # TODO: leaky abstraction
          args: {{ mysql_mysqld_options }} # TODO: leaky abstraction
          ports:
            - containerPort: 3306
              hostPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      # hostname: mysql
      restartPolicy: Always
      hostNetwork: true
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data
      # TODO: need to pass throught the innodb options too
