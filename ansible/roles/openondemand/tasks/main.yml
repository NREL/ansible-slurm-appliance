---

# - debug:
#     var: openondemand_osc_ood_defaults

# - meta: end_here

- name: Set osc.ood variables from this role's defaults if no overriding inventory var
  set_fact:
    "{{ item.key }}": "{{ lookup('vars', item.key, default=item.value) }}"
  loop: "{{ openondemand_osc_ood_defaults | dict2items }}"
  when: (item.key in hostvars[inventory_hostname]) or (item.value is not none)

- include_role:
    name: osc.ood
  # can't set vars: from a dict hence the workaround above

- name: Ensure post_tasks dirs exists
  file:
    path: "{{ item }}"
    state: directory
  loop:
    # - /etc/ood/config/apps/dashboard/initializers
    - /etc/ood/config/locales
    - /etc/ood/config/announcements.d
    - /etc/ood/config/pun/html

- name: Create dashboard additional config directory
  file:
    path: /etc/ood/config/apps/dashboard/initializers
    state: directory
    recurse: yes
    owner: root
    mode: o=rwX,go=rX

- name: Create additional shortcuts in Files app
  template:
    src: files_shortcuts.rb.j2
    dest: /etc/ood/config/apps/dashboard/initializers/ood.rb
    owner: root
    mode: o=rw,go=r
  when: openondemand_filesapp_paths

- name: Create job template directory
  file:
    path: "/etc/ood/config/apps/myjobs/templates/"
    state: directory
    recurse: True
    owner: root
    group: root
    mode: o=rwX,go=rX

- name: Copy web page to let users create their home directory
  copy:
    src: missing_home_directory.html
    dest: /etc/ood/config/pun/html/missing_home_directory.html

- name: Create mapping directory
  file:
    path: /etc/grid-security
    state: directory
    owner: root
    group: apache
    mode: u=rwX,g=rX,o=
  when: openondemand_mapping_users

- name: Create mapping file
  template:
    dest: /etc/grid-security/grid-mapfile
    src: grid-mapfile.j2
    owner: root
    group: apache
    mode: u=rw,g=r,o=
  when: openondemand_mapping_users

- name: Create app directories for dashboard links
  file:
    path: /var/www/ood/apps/sys/{{ item.app_name | default(item.name) }}
    state: directory
  loop: "{{ openondemand_dashboard_links }}"

- name: Create app manifests for dashboard links
  template:
    src: dashboard_app_links.yml.j2
    dest: /var/www/ood/apps/sys/{{ item.app_name | default(item.name) }}/manifest.yml
  loop: "{{ openondemand_dashboard_links }}"

# - name: Ensure ondemand-dex is running and active
#   service:
#     name: ondemand-dex
#     enabled: yes
#     state: stopped
#   when: false

# - name: Copy site images
#   copy:
#     src: ansible/roles/openondemand/ondemand
#     dest: "{{ item }}"
#   loop:
#     - /var/www/ood/public
#     - /usr/share/ondemand-dex/web/themes/
