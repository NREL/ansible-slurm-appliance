---

- name: Download k3s install script
  ansible.builtin.get_url:
    url: https://get.k3s.io/
    timeout: 120
    dest: /usr/bin/k3s-install.sh
    owner: root
    group: root
    mode: "0755"

- name: Install k3s
  ansible.builtin.shell:
    cmd: /usr/bin/k3s-install.sh
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    INSTALL_K3S_EXEC: "{{ item }}"
    INSTALL_K3S_SKIP_START: "true"
    INSTALL_K3S_SKIP_ENABLE: "true"
    INSTALL_K3S_BIN_DIR: "/usr/bin"
  changed_when: true
  loop:
    - server
    - agent

- name: Install helm
  unarchive:
    src: https://get.helm.sh/helm-v3.11.0-linux-amd64.tar.gz
    dest: /usr/bin
    extra_opts: "--strip-components=1"
    owner: root
    group: root
    mode: 0755
    remote_src: true

- name: Add k3s kubeconfig as environment variable
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: "KUBECONFIG=/etc/rancher/k3s/k3s.yaml"

- name: Install ansible-init playbook for k3s agent or server activation
  copy:
    src: start_k3s.yml
    dest: /etc/ansible-init/playbooks/0-start-k3s.yml

- name: Get service status 
  ansible.builtin.service_facts:

- name: Create k3s ingress endpoint for OOD if running
  when: (groups['openondemand'] | length) > 0 and ansible_facts.services['k3s.service'] is defined and ansible_facts.services['k3s.service'].state == "running"
  block:
    - name: Creating headless service for slurm exporter
      kubernetes.core.k8s:
        namespace: "default"
        definition:
          kind: Service
          metadata:
            name: ood
          spec:
            clusterIP: None
            ports:
            - name: http-web
              port: 80
              protocol: TCP

    - name: Binding slurm exporter service to host
      kubernetes.core.k8s:
        namespace: "default"
        definition:
          kind: Endpoints
          metadata:
            name: ood
          subsets:
            - addresses:
                - ip: "{{ hostvars[ groups['openondemand'] | first].ansible_host }}"
              ports:
                - name: http-web
                  port: 80
                  protocol: TCP
    
    - name: Creating ingress
      kubernetes.core.k8s:
        namespace: "default"
        definition:
          ingressClassName: traefik
          rules:
          - http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: ood
                    port:
                      number: 80
