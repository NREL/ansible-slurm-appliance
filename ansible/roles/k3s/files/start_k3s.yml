- hosts: localhost
  become: true
  vars:
    os_metadata: "{{ lookup('url', 'http://169.254.169.254/openstack/latest/meta_data.json') | from_json }}"
    k3s_token: "{{ os_metadata.meta.k3s_token }}"
    k3s_server_name: "{{ os_metadata.meta.k3s_server }}"
    service_name: "{{ 'k3s-agent' if k3s_server_name is defined else 'k3s' }}"
  tasks:
    - name: Add the token for joining the cluster to the environment
      no_log: false # avoid logging the server token
      ansible.builtin.lineinfile:
        path: "/etc/systemd/system/{{ service_name }}.service.env"
        line: "K3S_TOKEN={{ k3s_token }}"

    - name: Add server url to agents
      ansible.builtin.lineinfile:
        path: "/etc/systemd/system/{{ service_name }}.service.env"
        line: "K3S_URL=https://{{ k3s_server_name }}:6443"
      when: k3s_server_name is defined

    - name: Only run loadbalancer on k3s server
    # avoids problems with Ondemand https server
      when: k3s_server_name is undefined
      block:
        - name: Create override directory
          ansible.builtin.file:
            state: directory
            path: "/etc/systemd/system/{{ service_name }}.service.d"
        
        - name: Set loadbalancer label on k3s server
          ansible.builtin.copy:
            dest: "/etc/systemd/system/{{ service_name }}.service.d/override.conf"
            content: |
              [Service]
              ExecStart=
              ExecStart=/usr/bin/k3s server --node-label svccontroller.k3s.cattle.io/enablelb=true

    - name: Start k3s service
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        daemon_reload: true
        state: started
        enabled: true
