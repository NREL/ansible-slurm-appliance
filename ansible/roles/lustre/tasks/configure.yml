- name: Gather interface info
  shell:
    cmd: |
      ip -o -f inet addr show | awk '{print $2, $4}' | awk -F/ '{print $1}'
  changed_when: false
  register: _inet_interfaces

- name: Set fact for Lustre interface
  set_fact:
    _lustre_interface: "{{ item.0 }}"
  when: lustre_subnet_cidr | ansible.utils.network_in_usable(item.1)
  loop: "{{ _inet_interfaces.stdout_lines | map('split') }}"

- name: Ensure Lustre interface found
  assert:
    that: _lustre_interface is defined
    fail_msg: "No interface was found for lustre_subnet_cidr={{ lustre_subnet_cidr }}"

- name: Write LNet configuration file
  template:
    src: lnet.conf.j2
    dest:  /etc/lnet.conf # exists from package install
    owner: root
    group: root
    mode: u=rw,go=r # from package install
  register: _lnet_conf

- name: Import LNet configuration
  command: lnetctl import /etc/lnet.conf
  when: _lnet_conf.changed

- name: Ensure mount points exist
  ansible.builtin.file:
    path: "{{ item.mount_point | default(lustre_mount_point) }}/{{ item.fs_name | default(lustre_fs_name) }}"
    state: directory
  loop: "{{ lustre_mounts }}"
  when: "item.mount_state | default(lustre_mount_state) != 'absent'"
# TODO: do we need to set owner/group/mode either pre- or post-mount?

# TODO: is this an ok way of doing it?
- name: Mount lustre filesystem
  ansible.posix.mount:
    fstype: lustre
    src: "{{ item.mgs_nid | default(lustre_mgs_nid) }}:/{{ item.lustre_fs_name | default(lustre_fs_name) }}"
    path: "{{ item.mount_point | default(lustre_mount_point) }}/{{ item.fs_name | default(lustre_fs_name) }}"
    state: "{{ lustre_mount_state }}"
    opts: "defaults,_netdev,noauto,x-systemd.automount,x-systemd.requires=lnet.service"
    # opts are systemd defaults from http://wiki.lustre.org/Mounting_a_Lustre_File_System_on_Client_Nodes
  loop: "{{ lustre_mounts }}"
